import{d as g,u as k,s as B,o as M,c as n,a as R,b as i,t as a,e as v,f as s,F as S,r as w,B as d,p as b,g as T,h as r,W as V,_ as q}from"./index.1736488c.js";import{u as x}from"./settings.342a4c20.js";const I=o=>(b("data-v-c254d827"),o=o(),T(),o),U={class:"wrapper"},F={key:0},N=I(()=>s("legend",null,"Tokens",-1)),D={role:"list"},E={class:"token-id-name"},L={class:"description"},W={class:"amount"},A=g({__name:"TokensView",props:{address:{type:String,required:!0}},setup(o){const c=o,f=x(),p=k(),{query:y,validatedQuery:l,wallet:u,tokenDetails:_}=B(p);M(async()=>{console.log("props: "+c.address),console.log("validate query: "+l.value.query),l.value.query!==c.address&&(y.value=c.address,await p.search())});async function C(){_.value.forEach(async t=>{try{let m=(await d.fetchAuthChainFromChaingraph({transactionHash:t.id,chaingraphUrl:f.chaingraphUrl})).pop()?.httpsUrl;typeof m<"u"&&await d.addMetadataRegistryFromUri(m)}catch{console.log("error fetching BCMR for: "+t.id)}const h=d.getTokenInfo(t.id);t.BCMR=h})}return(t,h)=>(r(),n("div",U,[R(V),i(u)?(r(),n("div",F,a(i(u).tokenaddr),1)):v("",!0),s("fieldset",null,[N,s("div",{class:"button-box"},[s("a",{class:"button outline primary",onClick:C},"Load BCMR Metadata")]),s("ol",D,[(r(!0),n(S,null,w(i(_),e=>(r(),n("li",{key:e.id},[s("p",E,a(e.BCMR?.name?e.BCMR?.name:e.id),1),s("p",L,a(e.BCMR?.description?e.BCMR?.description:""),1),s("p",W,a(e.amount/10**(e.BCMR?.token?.decimals?e.BCMR?.token?.decimals:0))+" "+a(e.BCMR?.token?.symbol?e.BCMR?.token?.symbol:"units"),1)]))),128))])])]))}});const j=q(A,[["__scopeId","data-v-c254d827"]]);export{j as default};
